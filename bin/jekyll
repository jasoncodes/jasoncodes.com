#!/usr/bin/env ruby

require 'rubygems'
require 'bundler'
Bundler.require

require 'active_support'
require 'active_support/core_ext/module/aliasing'

require 'jekyll'

raise 'Albino not loaded' unless defined?(Albino)
class Albino
  
  def colorize_with_wrapped_lines(options = {})
    
    # disable the built in <div/> and <pre/> wrappers
    options[:O] = "#{@options[:O]},nowrap=true"
    
    # call the colorizer
    html = colorize_without_wrapped_lines(options)
    
    # wrap each line in <code/> so we can style them easier
    html.gsub!(/^.*$/, '<code>\0</code>')
    
    # wrap the result in a <pre/> with our desired CSS classes
    "<pre class=\"source source-#{@options[:l]}\">#{html}</pre>"
    
  end
  alias_method_chain :colorize, :wrapped_lines
  alias_method :to_s, :colorize
  
end

raise 'Post not loaded' unless defined?(Jekyll::Post)
class Jekyll::Post
  
  # dates in filenames are now optional
  # if omitted, dates must be set in the metadata for published posts
  
  remove_const :MATCHER
  MATCHER = /^(.+\/)*(?:(\d+-\d+-\d+)-)?(.*)(\.[^.]+)$/
  
  def process(name)
    m, cats, date, slug, ext = *name.match(MATCHER)
    self.date = date && Time.parse(date)
    self.slug = slug
    self.ext = ext
  end
  
end

jekyll_bin_path = Gem.bin_path('jekyll')
eval File.read(jekyll_bin_path), nil, jekyll_bin_path
